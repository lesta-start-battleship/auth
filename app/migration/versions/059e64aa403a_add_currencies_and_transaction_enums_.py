"""Add currencies and transaction enums, user_transactions table, CASCADE deletion of user_currencies and user_transactions

Revision ID: 059e64aa403a
Revises: a791d9d76c93
Create Date: 2025-07-02 20:27:38.546414

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import MetaData


# revision identifiers, used by Alembic.
revision: str = '059e64aa403a'
down_revision: Union[str, Sequence[str], None] = 'a791d9d76c93'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

metadata = MetaData()

currency_enum = sa.Enum(
    'GUILD_RAGE', 'GOLD',
    name='currencytype',
    metadata=metadata
)

transaction_enum = sa.Enum(
    'PENDING', 'RESERVED', 'DECLINED', 'COMPLETED', 'FAILED',
    name='transactionstatus',
    metadata=metadata
)

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()

    currency_enum.create(bind, checkfirst=True)
    transaction_enum.create(bind, checkfirst=True)

    op.create_table('user_transactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('currency_type', currency_enum, nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('status', transaction_enum, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id')
    )
    op.create_unique_constraint(None, 'user_currencies', ['user_id'])
    op.drop_constraint(op.f('user_currencies_user_id_fkey'), 'user_currencies', type_='foreignkey')
    op.create_foreign_key(None, 'user_currencies', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('users', 'surname',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=70),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'email',
               existing_type=sa.String(length=70),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('users', 'surname',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    op.alter_column('users', 'name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    op.drop_constraint(None, 'user_currencies', type_='foreignkey')
    op.create_foreign_key(op.f('user_currencies_user_id_fkey'), 'user_currencies', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'user_currencies', type_='unique')
    op.drop_table('user_transactions')
    # ### end Alembic commands ###

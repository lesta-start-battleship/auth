# ===== DEPLOYMENT AUTH-SERVICE =====
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
spec:
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      initContainers:
      - name: alembic-migrate
        image: auth-service:latest
        imagePullPolicy: Never
        command: ["alembic", "upgrade", "heads"]
        env:
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: auth-config
                key: POSTGRES_HOST

          - name: POSTGRES_PORT
            valueFrom:
              configMapKeyRef:
                name: auth-config
                key: POSTGRES_PORT

          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: auth-config
                key: POSTGRES_USER

          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: auth-secret
                key: POSTGRES_PASSWORD

          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: auth-config
                key: POSTGRES_DB
          - name: JWT_PRIVATE_KEY
            valueFrom:
              secretKeyRef:
                name: secret-key
                key: JWT_PRIVATE_KEY
          - name: JWT_PUBLIC_KEY
            valueFrom:
              secretKeyRef:
                name: secret-key
                key: JWT_PUBLIC_KEY
      containers:
        - name: auth
          image: auth-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 5000
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: POSTGRES_HOST

            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: POSTGRES_PORT

            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: POSTGRES_USER

            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-secret
                  key: POSTGRES_PASSWORD

            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: POSTGRES_DB

            - name: FLASK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: auth-secret
                  key: FLASK_SECRET_KEY

            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: REDIS_HOST

            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: REDIS_PORT

            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: KAFKA_BOOTSTRAP_SERVERS
            
            - name: MAIL_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: MAIL_USERNAME

            - name: MAIL_SERVER
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: MAIL_SERVER
              
            - name: MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-secret
                  key: MAIL_PASSWORD

            - name: MAIL_PORT
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: MAIL_PORT

            - name: JWT_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: secret-key
                  key: JWT_PRIVATE_KEY

            - name: JWT_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: secret-key
                  key: JWT_PUBLIC_KEY

---
# ===== AUTOSCALER =====
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 2
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80


---
# ===== SERVICE AUTH-SERVICE =====
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  type: LoadBalancer
  selector:
    app: auth
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000

---
# ===== PVC ДЛЯ POSTGRES =====
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# ===== DEPLOYMENT POSTGRES =====
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: POSTGRES_HOST

            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: POSTGRES_PORT

            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: POSTGRES_USER

            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-secret
                  key: POSTGRES_PASSWORD

            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: POSTGRES_DB
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---
# ===== SERVICE POSTGRES =====
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - port: 5432

---
# ===== DEPLOYMENT REDIS =====
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7
          ports:
            - containerPort: 6379

---
# ===== SERVICE REDIS =====
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
    - port: 6379
---
# ===== DEPLOYMENT ZOOKEEPER =====
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:7.5.0
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
          ports:
            - containerPort: 2181

---
# ===== SERVICE ZOOKEEPER =====
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  selector:
    app: zookeeper
  ports:
    - port: 2181

---
# ===== DEPLOYMENT KAFKA =====
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-auth
  template:
    metadata:
      labels:
        app: kafka-auth
    spec:
      containers:
        - name: kafka-auth
          image: confluentinc/cp-kafka:7.5.0
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_BROKER_ID
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: KAFKA_BROKER_ID

            - name: KAFKA_ZOOKEEPER_CONNECT
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: KAFKA_ZOOKEEPER_CONNECT

            - name: KAFKA_ADVERTISED_LISTENERS
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: KAFKA_ADVERTISED_LISTENERS

            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR

            - name: KAFKA_LISTENERS
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: KAFKA_LISTENERS

            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP

---
# ===== SERVICE KAFKA =====
apiVersion: v1
kind: Service
metadata:
  name: kafka-auth
spec:
  selector:
    app: kafka-auth
  ports:
    - name: kafka-auth
      protocol: TCP
      port: 9092
      targetPort: 9092
  type: ClusterIP